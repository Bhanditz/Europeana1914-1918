<%
  # vals have:of fields - all must be present to show
  #    name (the key of the hash)
  #    source (read from proxy or aggregation)

  # portal search strings for test data:
  #    europeana_aggregation_edm_country:*
  #    proxy_dc_creator:*
  #    proxy_dc_date:*
  #    proxy_dc_type:*
  #    proxy_dc_format:*
  #    proxy_dc_coverage:*
  #    proxy_dc_rights:*
  #    proxy_dcterms_extent:*
  #    europeana_aggregation_edm_language:*
  #    provider_aggregation_edm_provider:*
  #    provider_aggregation_edm_dataProvider:*
  # check here for others:
  # /git/corelib/corelib-solr/src/test/resources/solr/search/conf/schema.xml

	html = ''

	edm_fields = [
		{
			"name" => "dctermsAlternative",
			"source" => proxy
		},

		{
			"name" => "dcDescription",
			"source" => proxy
		},

		{
			"name" => "dcLanguage",
			"source" => proxy,
		},

		{
			"name" => "dcCreator",
			"source" => proxy
		},

		{
			"name" => "dcContributor",
			"source" => proxy
		},

		{
			"name" => "dcType",
			"source" => proxy
		},

		{
			"name" => "dcFormat",
			"source" => proxy
		},

		{
			"name" => "dctermsMedium",
			"source" => proxy
		},

		{
			"name" => "dctermsExtent",
			"source" => proxy
		},

		{
			"name" => "dcSubject",
			"source" => proxy
		},

		{
			"name" => "dcDate",
			"source" => proxy
		},
		
		{
			"name" => "dctermsTemporal",
			"source" => proxy
		},

		{
			"name" => "dcCoverage",
			"source" => proxy
		},
		
		{
			"name" => "dctermsSpatial",
			"source" => proxy
		},

		{
			"name" => "dcRights",
			"source" => proxy
		},

		{
			"name" => "edmRights",
			"source" => aggregation
		},

		{
			"name" => "dcIdentifier",
			"source" => proxy
		},

		{
			"name" => "dcSource",
			"source" => proxy
		},

		{
			"name" => "dcRelation",
			"source" => proxy
		},

		{
			"name" => "edmDataProvider",
			"source" => aggregation
		},

		{
			"name" => "edmProvider",
			"source" => aggregation
		},

		{
			"name" => "edmCountry",
			"source" => euAggregation
		}
	]

	edm_fields.each do |edm_field|
		field_ns = edm_field["name"].underscore.split('_').first
		field_label = edm_field["name"].underscore.split('_')[1..-1].join('_')
		if field_value = edm_proxy_field( edm_field["source"], edm_field["name"], :concepts => record['concepts'] )
			html += '<dt><b>' + t( 'formtastic.labels.content.metadata.' + field_ns + '.' + field_label ) + '</b></dt>'
			html += '<dd class="translate">' + field_value + '</dd>'
		end
	end
-%>
<%= html.html_safe -%>
